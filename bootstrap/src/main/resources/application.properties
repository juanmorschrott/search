spring.application.name=bootstrap

server.port=8080

logging.level.root=INFO
logging.level.org.springframework.web=DEBUG
logging.level.com.avoris=DEBUG

kafka.topic=hotel_availability_searches

# Producer
spring.kafka.producer.properties.spring.json.add.type.headers=true
spring.kafka.producer.bootstrap-servers=kafka:29092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

spring.kafka.producer.retries=3
spring.kafka.producer.batch-size=16384

# Consumer
spring.kafka.consumer.bootstrap-servers=kafka:29092
spring.kafka.consumer.group-id=search-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.avoris.domain.model
spring.kafka.consumer.properties.spring.json.value.default.type=com.avoris.domain.model.Search

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=1000

# Mongodb
spring.data.mongodb.uri=mongodb://mongodb:27017/search
spring.data.mongodb.database=search
